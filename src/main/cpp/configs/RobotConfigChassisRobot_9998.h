// clang-format off
//====================================================================================================================================================
// Copyright 2023 Lake Orion Robotics FIRST Team 302
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
// OR OTHER DEALINGS IN THE SOFTWARE.
//====================================================================================================================================================
// This file was automatically generated by the Team 302 code generator version 1.1.0.0
// Generated on Tuesday, January 16, 2024 5:37:08 PM

#pragma once
#include "chassis/swerve/SwerveChassis.h"
#include "chassis/swerve/SwerveModule.h"
#include "configs/RobotConfig.h"
#include "hw/DragonCanCoder.h"
#include "hw/DragonPigeon2.h"
#include "hw/DragonTalonFX.h"
#include "hw/interfaces/IDragonMotorController.h"

class RobotConfigChassisRobot_9998 : public RobotConfig
{
public:
	RobotConfigChassisRobot_9998() = default;
	~RobotConfigChassisRobot_9998() = default;
    SwerveChassis *GetSwerveChassis() const override;
    IChassis *GetIChassis() const override;

protected:
    void DefineMotorControllers() override;
	void DefineCANSensors() override;
    void DefineChassis() override;


private:
    DragonTalonFX *m_frontLeftDrive = nullptr;
    DragonTalonFX *m_frontLeftTurn = nullptr;
    DragonCanCoder *m_frontLeftCC = nullptr;

    DragonTalonFX *m_frontRightDrive = nullptr;
    DragonTalonFX *m_frontRightTurn = nullptr;
    DragonCanCoder *m_frontRightCC = nullptr;

    DragonTalonFX *m_backLeftDrive = nullptr;
    DragonTalonFX *m_backLeftTurn = nullptr;
    DragonCanCoder *m_backLeftCC = nullptr;

    DragonTalonFX *m_backRightDrive = nullptr;
    DragonTalonFX *m_backRightTurn = nullptr;
    DragonCanCoder *m_backRightCC = nullptr;

    DragonPigeon2* m_pigeon = nullptr;

	SwerveChassis* m_swerveChassis = nullptr;
	SwerveModule* m_frontLeftSM = nullptr;
	SwerveModule* m_frontRightSM = nullptr;
	SwerveModule* m_backLeftSM = nullptr;
	SwerveModule* m_backRightSM = nullptr;
	

};